# coding: utf-8

"""
    Fax.to REST API client for Python

    This is Fax.to REST API client for Python.  # noqa: E501

    OpenAPI spec version: 2.0.0
    Contact: inquiries@fax.to
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class InlineResponse2008Files(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'filename': 'str',
        'pages': 'int',
        'size': 'int',
        'uploaded': 'date'
    }

    attribute_map = {
        'id': 'id',
        'filename': 'filename',
        'pages': 'pages',
        'size': 'size',
        'uploaded': 'uploaded'
    }

    def __init__(self, id=None, filename=None, pages=None, size=None, uploaded=None):  # noqa: E501
        """InlineResponse2008Files - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._filename = None
        self._pages = None
        self._size = None
        self._uploaded = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if filename is not None:
            self.filename = filename
        if pages is not None:
            self.pages = pages
        if size is not None:
            self.size = size
        if uploaded is not None:
            self.uploaded = uploaded

    @property
    def id(self):
        """Gets the id of this InlineResponse2008Files.  # noqa: E501


        :return: The id of this InlineResponse2008Files.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InlineResponse2008Files.


        :param id: The id of this InlineResponse2008Files.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def filename(self):
        """Gets the filename of this InlineResponse2008Files.  # noqa: E501


        :return: The filename of this InlineResponse2008Files.  # noqa: E501
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename):
        """Sets the filename of this InlineResponse2008Files.


        :param filename: The filename of this InlineResponse2008Files.  # noqa: E501
        :type: str
        """

        self._filename = filename

    @property
    def pages(self):
        """Gets the pages of this InlineResponse2008Files.  # noqa: E501


        :return: The pages of this InlineResponse2008Files.  # noqa: E501
        :rtype: int
        """
        return self._pages

    @pages.setter
    def pages(self, pages):
        """Sets the pages of this InlineResponse2008Files.


        :param pages: The pages of this InlineResponse2008Files.  # noqa: E501
        :type: int
        """

        self._pages = pages

    @property
    def size(self):
        """Gets the size of this InlineResponse2008Files.  # noqa: E501


        :return: The size of this InlineResponse2008Files.  # noqa: E501
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this InlineResponse2008Files.


        :param size: The size of this InlineResponse2008Files.  # noqa: E501
        :type: int
        """

        self._size = size

    @property
    def uploaded(self):
        """Gets the uploaded of this InlineResponse2008Files.  # noqa: E501


        :return: The uploaded of this InlineResponse2008Files.  # noqa: E501
        :rtype: date
        """
        return self._uploaded

    @uploaded.setter
    def uploaded(self, uploaded):
        """Sets the uploaded of this InlineResponse2008Files.


        :param uploaded: The uploaded of this InlineResponse2008Files.  # noqa: E501
        :type: date
        """

        self._uploaded = uploaded

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse2008Files):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
