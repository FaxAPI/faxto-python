# coding: utf-8

"""
    Fax.to REST API client for Python

    This is Fax.to REST API client for Python.  # noqa: E501

    OpenAPI spec version: 2.0.0
    Contact: inquiries@fax.to
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.models.inline_response2003_created import InlineResponse2003Created  # noqa: F401,E501


class InlineResponse2004Inbox(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'did_id': 'int',
        'filename': 'str',
        'filesize': 'str',
        'number': 'str',
        'sender': 'str',
        'total_pages': 'int',
        'created_at': 'InlineResponse2003Created',
        'preview_file': 'str',
        'file_url': 'str'
    }

    attribute_map = {
        'id': 'id',
        'did_id': 'did_id',
        'filename': 'filename',
        'filesize': 'filesize',
        'number': 'number',
        'sender': 'sender',
        'total_pages': 'total_pages',
        'created_at': 'created_at',
        'preview_file': 'preview_file',
        'file_url': 'file_url'
    }

    def __init__(self, id=None, did_id=None, filename=None, filesize=None, number=None, sender=None, total_pages=None, created_at=None, preview_file=None, file_url=None):  # noqa: E501
        """InlineResponse2004Inbox - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._did_id = None
        self._filename = None
        self._filesize = None
        self._number = None
        self._sender = None
        self._total_pages = None
        self._created_at = None
        self._preview_file = None
        self._file_url = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if did_id is not None:
            self.did_id = did_id
        if filename is not None:
            self.filename = filename
        if filesize is not None:
            self.filesize = filesize
        if number is not None:
            self.number = number
        if sender is not None:
            self.sender = sender
        if total_pages is not None:
            self.total_pages = total_pages
        if created_at is not None:
            self.created_at = created_at
        if preview_file is not None:
            self.preview_file = preview_file
        if file_url is not None:
            self.file_url = file_url

    @property
    def id(self):
        """Gets the id of this InlineResponse2004Inbox.  # noqa: E501


        :return: The id of this InlineResponse2004Inbox.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InlineResponse2004Inbox.


        :param id: The id of this InlineResponse2004Inbox.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def did_id(self):
        """Gets the did_id of this InlineResponse2004Inbox.  # noqa: E501


        :return: The did_id of this InlineResponse2004Inbox.  # noqa: E501
        :rtype: int
        """
        return self._did_id

    @did_id.setter
    def did_id(self, did_id):
        """Sets the did_id of this InlineResponse2004Inbox.


        :param did_id: The did_id of this InlineResponse2004Inbox.  # noqa: E501
        :type: int
        """

        self._did_id = did_id

    @property
    def filename(self):
        """Gets the filename of this InlineResponse2004Inbox.  # noqa: E501


        :return: The filename of this InlineResponse2004Inbox.  # noqa: E501
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename):
        """Sets the filename of this InlineResponse2004Inbox.


        :param filename: The filename of this InlineResponse2004Inbox.  # noqa: E501
        :type: str
        """

        self._filename = filename

    @property
    def filesize(self):
        """Gets the filesize of this InlineResponse2004Inbox.  # noqa: E501


        :return: The filesize of this InlineResponse2004Inbox.  # noqa: E501
        :rtype: str
        """
        return self._filesize

    @filesize.setter
    def filesize(self, filesize):
        """Sets the filesize of this InlineResponse2004Inbox.


        :param filesize: The filesize of this InlineResponse2004Inbox.  # noqa: E501
        :type: str
        """

        self._filesize = filesize

    @property
    def number(self):
        """Gets the number of this InlineResponse2004Inbox.  # noqa: E501


        :return: The number of this InlineResponse2004Inbox.  # noqa: E501
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this InlineResponse2004Inbox.


        :param number: The number of this InlineResponse2004Inbox.  # noqa: E501
        :type: str
        """

        self._number = number

    @property
    def sender(self):
        """Gets the sender of this InlineResponse2004Inbox.  # noqa: E501


        :return: The sender of this InlineResponse2004Inbox.  # noqa: E501
        :rtype: str
        """
        return self._sender

    @sender.setter
    def sender(self, sender):
        """Sets the sender of this InlineResponse2004Inbox.


        :param sender: The sender of this InlineResponse2004Inbox.  # noqa: E501
        :type: str
        """

        self._sender = sender

    @property
    def total_pages(self):
        """Gets the total_pages of this InlineResponse2004Inbox.  # noqa: E501


        :return: The total_pages of this InlineResponse2004Inbox.  # noqa: E501
        :rtype: int
        """
        return self._total_pages

    @total_pages.setter
    def total_pages(self, total_pages):
        """Sets the total_pages of this InlineResponse2004Inbox.


        :param total_pages: The total_pages of this InlineResponse2004Inbox.  # noqa: E501
        :type: int
        """

        self._total_pages = total_pages

    @property
    def created_at(self):
        """Gets the created_at of this InlineResponse2004Inbox.  # noqa: E501


        :return: The created_at of this InlineResponse2004Inbox.  # noqa: E501
        :rtype: InlineResponse2003Created
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this InlineResponse2004Inbox.


        :param created_at: The created_at of this InlineResponse2004Inbox.  # noqa: E501
        :type: InlineResponse2003Created
        """

        self._created_at = created_at

    @property
    def preview_file(self):
        """Gets the preview_file of this InlineResponse2004Inbox.  # noqa: E501


        :return: The preview_file of this InlineResponse2004Inbox.  # noqa: E501
        :rtype: str
        """
        return self._preview_file

    @preview_file.setter
    def preview_file(self, preview_file):
        """Sets the preview_file of this InlineResponse2004Inbox.


        :param preview_file: The preview_file of this InlineResponse2004Inbox.  # noqa: E501
        :type: str
        """

        self._preview_file = preview_file

    @property
    def file_url(self):
        """Gets the file_url of this InlineResponse2004Inbox.  # noqa: E501


        :return: The file_url of this InlineResponse2004Inbox.  # noqa: E501
        :rtype: str
        """
        return self._file_url

    @file_url.setter
    def file_url(self, file_url):
        """Sets the file_url of this InlineResponse2004Inbox.


        :param file_url: The file_url of this InlineResponse2004Inbox.  # noqa: E501
        :type: str
        """

        self._file_url = file_url

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse2004Inbox):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
